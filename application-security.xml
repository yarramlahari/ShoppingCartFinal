<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">
	<!-- only the user with authority of the ROLE-ADMIN is able to access -->
	 
	  <http auto-config="true"  use-expressions="true">
	 	    <!--  <intercept-url pattern="/admin1**" access="hasRole('ROLE_ADMIN')"/> -->
            <!-- <intercept-url pattern="/login/**" access="hasRole('ROLE_USER')"/> -->
             <!-- <intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" /> -->
             
        
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')"/><!-- only admin can access -->
		<intercept-url pattern="/user**" access="hasRole('ROLE_USER')"/><!-- only user can access -->
		<!-- <intercept-url pattern="/ret/**" access="hasRole('ROLE_USER')"/> -->
		<form-login login-page="/Login" login-processing-url="/j_spring_security_check" default-target-url="/welcome"  authentication-failure-url="/fail2login" />
        <logout delete-cookies="JSESSIONID" logout-url="/Logout" logout-success-url="/logoutsuccess"/>    
        <csrf disabled="true"/>  <!-- -security token(cross site request forgery) -->
    </http> 	 
	<authentication-manager>
	<!-- password challenge -->
	<authentication-provider> <!--capable of performing authentication is conducted at runtime the ProviderManager-->
	<jdbc-user-service data-source-ref="dataSource" 
	 users-by-username-query="select username,password,status from login where username=?" 
authorities-by-username-query="select u1.username, u1.role from login u1 where u1.username =?" />
	</authentication-provider>
	</authentication-manager>
	</beans:beans> 